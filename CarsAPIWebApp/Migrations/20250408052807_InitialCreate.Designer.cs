// <auto-generated />
using System;
using CarsAPIWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarsAPIWebApp.Migrations
{
    [DbContext(typeof(CarsAPIContext))]
    [Migration("20250408052807_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarSharingAPI.Models.Car", b =>
                {
                    b.Property<int>("CR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CR_ID"));

                    b.Property<string>("CR_COLOR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CR_MODEL_ID")
                        .HasColumnType("int");

                    b.Property<int>("CR_PRODUCE_YEAR")
                        .HasColumnType("int");

                    b.HasKey("CR_ID");

                    b.HasIndex("CR_MODEL_ID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarSharingAPI.Models.CarSharingZone", b =>
                {
                    b.Property<int>("CSZ_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CSZ_ID"));

                    b.Property<string>("CSZ_TOWN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CSZ_ID");

                    b.ToTable("CarSharingZones");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Customer", b =>
                {
                    b.Property<int>("CS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CS_ID"));

                    b.Property<string>("CS_EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CS_FIRST_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CS_LAST_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CS_PHONE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CS_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Model", b =>
                {
                    b.Property<int>("MD_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MD_ID"));

                    b.Property<string>("MD_BRAND")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MD_ENGINE_VOLUME")
                        .HasColumnType("float");

                    b.Property<bool>("MD_IS_AUTOMATIC")
                        .HasColumnType("bit");

                    b.Property<string>("MD_MODEL_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MD_NUM_OF_SEATS")
                        .HasColumnType("int");

                    b.Property<string>("MD_TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MD_ID");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Rent", b =>
                {
                    b.Property<int>("RN_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RN_ID"));

                    b.Property<int>("RN_CAR_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("RN_COST_PER_DAY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RN_CS_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RN_FINISH_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RN_START_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("RN_ID");

                    b.HasIndex("RN_CAR_ID");

                    b.HasIndex("RN_CS_ID");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Car", b =>
                {
                    b.HasOne("CarSharingAPI.Models.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("CR_MODEL_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Rent", b =>
                {
                    b.HasOne("CarSharingAPI.Models.Car", "Car")
                        .WithMany("Rents")
                        .HasForeignKey("RN_CAR_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarSharingAPI.Models.Customer", "Customer")
                        .WithMany("Rents")
                        .HasForeignKey("RN_CS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Car", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Customer", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("CarSharingAPI.Models.Model", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
